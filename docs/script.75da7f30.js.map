{"version":3,"sources":["../events.json","script.js"],"names":["module","exports","id","name","date","city","genre","image","cities","Set","months","monthNames","getMonthName","num","parseInt","getMonthNumber","str","findIndex","selectCity","document","querySelector","selectMonth","cards","month","filterEvents","querySelectorAll","forEach","card","isVisible","dataset","style","display","window","addEventListener","event","split","day","add","createElement","className","eventDay","innerText","eventName","bgImg","Image","onload","backgroundImage","src","append","Array","from","sort","option","text","e","target","value"],"mappings":"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","file":"script.75da7f30.js","sourceRoot":"..\\src","sourcesContent":["module.exports=[{id:\"01\",name:\"Rave Autumn\",date:\"14.09.2019\",city:\"Amsterdam\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/826adbf1a19ba19e6ba9af9308d2b309.png\"},{id:\"02\",name:\"Best of 2019\",date:\"20.09.2019\",city:\"Berlin\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/ec3917285ef4db8532c8a9cd9a2112ce.png\"},{id:\"03\",name:\"Faderhead\",date:\"10.11.2019\",city:\"Rim\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/53486baba5ec9d256ce20816a3e54e51.png\"},{id:\"04\",name:\"Purple Fog Side\",date:\"05.06.2019\",city:\"Berlin\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/e1baa378009391210cc0e64f65c7784e.png\"},{id:\"05\",name:\"Carbon based Liveform\",date:\"14.02.2019\",city:\"Sr.Petersburg\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/b1f06edaf618c3e3ad19c159eb5aa036.jpeg\"},{id:\"06\",name:\"Neuroticfish\",date:\"25.05.2019\",city:\"Sr.Petersburg\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/49705480ff397085ad34685c4181c1ab.jpeg\"},{id:\"07\",name:\"Faderhead\",date:\"20.11.2019\",city:\"Rim\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/de9f4b49cc5ba737911b0db30f082fff.jpeg\"},{id:\"08\",name:\"Rave Winter\",date:\"15.02.2019\",city:\"Berlin\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/826adbf1a19ba19e6ba9af9308d2b309.png\"},{id:\"09\",name:\"Not a Robot\",date:\"22.06.2019\",city:\"Rim\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/14bce6211e055410a043e02a22cec69b.jpeg\"},{id:\"10\",name:\"Carbon Based lifeforms\",date:\"22.09.2019\",city:\"Berlin\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/7d655ea8b13f5fdda4469fb0035bd7a3.jpeg\"},{id:\"11\",name:\"Icon of Coil\",date:\"19.05.2019\",city:\"Rim\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/8c76c770ded42cea343dbf2d8523791e.jpeg\"},{id:\"12\",name:\"Solar Fields\",date:\"20.06.2019\",city:\"Sr.Petersburg\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/9ddae28837d2e4217e5c2e99bbd6f3a0.jpeg\"},{id:\"13\",name:\"Apoptygma Berzerk\",date:\"14.11.2019\",city:\"Amsterdam\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/720e3b29bf238cd40785ffe157b1151a.jpeg\"},{id:\"14\",name:\"Mental Discipline\",date:\"16.11.2019\",city:\"Rim\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/76372b51ab7408e826a191577abcd79d.jpeg\"},{id:\"15\",name:\"Apoptygma Berzerk\",date:\"25.02.2019\",city:\"Berlin\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/aec8583caa5bbe34b2c5695e2546ea3b.jpeg\"},{id:\"16\",name:\"Solar Fields\",date:\"14.02.2019\",city:\"Amsterdam\",genre:\"Electronic\",image:\"https://cdn3.xsolla.com/files/uploaded/113250/0662c0df7663f71831e83be091228413.jpeg\"}];","import events from '../events.json';\n\nconst cities = new Set();\nconst months = new Set();\nconst monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nconst getMonthName = (num) => monthNames[parseInt(num, 10)];\nconst getMonthNumber = (str) => monthNames.findIndex(str);\n\nconst selectCity = document.querySelector('#city');\nconst selectMonth = document.querySelector('#month');\nconst cards = document.querySelector('.cards');\n\nlet city = 'All';\nlet month = 'All';\n\nconst filterEvents = (city, month) => {\n  const cardArray = document.querySelectorAll('.card');\n  cardArray.forEach((card) => {\n    const isVisible =\n      (city === 'All' || city === card.dataset.city) &&\n      (month === 'All' || month === card.dataset.month);\n    card.style.display = isVisible ? '' : 'none';\n  });\n};\n\nwindow.addEventListener('DOMContentLoaded', () => {\n  events.forEach((event) => {\n    const [day, month, year] = event.date.split('.');\n\n    cities.add(event.city);\n    months.add(month);\n\n    const card = document.createElement('li');\n    card.className = 'card';\n    card.dataset.city = event.city;\n    card.dataset.month = getMonthName(month);\n\n    const eventDay = document.createElement('div');\n    eventDay.className = 'event-day';\n    eventDay.innerText = day;\n\n    const eventName = document.createElement('div');\n    eventName.className = 'event-name';\n    eventName.innerText = event.name;\n\n    const bgImg = new Image();\n    bgImg.onload = () => {\n      card.style.backgroundImage = `url(${bgImg.src})`;\n    };\n    bgImg.src = event.image;\n\n    card.append(eventDay);\n    card.append(eventName);\n\n    cards.append(card);\n  });\n\n  Array.from(cities)\n    .sort()\n    .forEach((city) => {\n      const option = document.createElement('option');\n      option.text = city;\n      selectCity.add(option);\n    });\n\n  Array.from(months)\n    .sort()\n    .forEach((month) => {\n      const option = document.createElement('option');\n      option.text = getMonthName(month);\n      selectMonth.add(option);\n    });\n});\n\nselectCity.addEventListener('change', (e) => {\n  city = e.target.value;\n  filterEvents(city, month);\n});\n\nselectMonth.addEventListener('change', (e) => {\n  month = e.target.value;\n  filterEvents(city, month);\n});\n"]}